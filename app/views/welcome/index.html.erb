<h1>Welcome#index</h1>
<p>Find me in app/views/welcome/index.html.erb</p>


<%= chart [{label: 'Hello World', color: 'blue', data: [ [1, 3], [2, 14.01], [3.5, 3.14]]}, {label: 'Foo', data: 25}, {label: 'Bar', data: 25}] %>

<script type="text/javascript">

	$(function() {

		var options = {
			lines: {
				show: true
			},
			points: {
				show: true
			},
			xaxis: {
				tickDecimals: 0,
				tickSize: 1
			}
		};

		var data = [];
		alreadyFetched = {};

		$.plot("#placeholder", data, options);

		var iteration = 0;

		function fetchData() {

			++iteration;

			function onDataReceived(series) {

				// Load all the data in one pass; if we only got partial
				// data we could merge it with what we already have.

				data = [ series ];
				$.plot("#placeholder", data, options);
			}

			// Normally we call the same URL - a script connected to a
			// database - but in this case we only have static example
			// files, so we need to modify the URL.

			$.ajax({
				url: "data-eu-gdp-growth-" + iteration + ".json",
				type: "GET",
				dataType: "json",
				success: onDataReceived
			});

			if (iteration < 5) {
				setTimeout(fetchData, 1000);
			} else {
				data = [];
				alreadyFetched = {};
			}
		}

		setTimeout(fetchData, 1000);
	});

</script>

<div class="demo-container">
	<div id="placeholder" class="demo-placeholder"></div>
</div>

<p>If you combine AJAX with setTimeout, you can poll the server for new data.</p>

<p>
	<button class="dataUpdate">Poll for data</button>
</p>
